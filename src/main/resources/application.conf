akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "INFO"
}

service {
  host = "localhost"
  port = 8080
}

spray.can {
  server {
    pipelining-limit = 128
    idle-timeout = 60s
  }
  host-connector {
    max-connections = 60
    pipelining = true
  }
}

couchclient {
  host="192.168.99.100"
  port="9000"
  path="newGetDoc"
}

tweetcontent {
  language-filter="en"
  trump-test="Trump"
}

twitterAPIs {
  home-dir="user.home"
  twitter-dir="/.twitter/activator"
  // This is useful to see what type of entity is being processed from Twitter stream
  print-entity=false
  filter-uri="https://stream.twitter.com/1.1/statuses/filter.json"
  sample-uri="https://stream.twitter.com/1.1/statuses/sample.json"
  bad-user="There was a bad user dependency injection."
  bad-place="There was a bad place dependency injection."
  bad-place-json="There was a bad place json dependency injection."
  bad-tweet="There was a bad tweet processing."
  bad-tweet-json="There was a bad tweet json depencency injection."
}